# ConfigMap containing the SPIRE agent configuration.
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "spire-agent.fullname" . }}
  namespace: {{ template "spire-agent.namespace" . }}
data:
  agent.conf: |
    agent {
      data_dir = {{ .Values.spireAgent.config.dataDir | quote }}
      log_level = {{ .Values.spireAgent.config.logLevel | quote }}
      server_address = {{ .Values.spireAgent.config.serverAddress | quote }}
      server_port = {{ .Values.spireAgent.config.serverPort | quote }}
      socket_path = {{ .Values.spireAgent.config.socketPath | quote }}
      trust_bundle_path = {{ .Values.spireAgent.config.trustBundlePath | quote }}
      trust_domain = {{ .Values.global.trustDomain | quote }}
      {{ if eq .Values.spireAgent.config.sds.enabled true }}

      sds = {
        {{ if not empty .Values.spireAgent.config.sds.defaultSvidName }}
        default_svid_name = {{ .Values.spireAgent.config.sds.defaultSvidName | quote }}
        {{ end }}
        {{ if not empty .Values.spireAgent.config.sds.defaultBundleName }}
        default_bundle_name = {{ .Values.spireAgent.config.sds.defaultBundleName | quote }}
        {{ end }}
        {{ if not empty .Values.spireAgent.config.sds.defaultAllBundlesName }}
        default_all_bundles_name = {{ .Values.spireAgent.config.sds.defaultAllBundlesName | quote }}
        {{ end }}
        {{ if not empty .Values.spireAgent.config.sds.disableSpiffeCertValidation }}
        disable_spiffe_cert_validation = {{ .Values.spireAgent.config.sds.disableSpiffeCertValidation | quote }}
        {{ end }}
      }
      {{ end }}
    }

    plugins {
      NodeAttestor {{ .Values.spireAgent.config.plugins.nodeAttestor.type | quote }} {
        plugin_data {
          # NOTE: Change this to your cluster name
          cluster = {{ .Values.global.clusterName | quote }}
        }
      }

      {{ range $index, $member := .Values.spireAgent.config.plugins.wokloadAttestors }}
      WorkloadAttestor {{ $member.type | quote }} {
        {{ if eq $member.type "k8s" }}
        plugin_data {
          # Defaults to the secure kubelet port by default.
          # Minikube does not have a cert in the cluster CA bundle that
          # can authenticate the kubelet cert, so skip validation.
          skip_kubelet_verification = {{ $member.pluginData.skipKubeletVerification | default "false" }}
          disable_container_selectors = {{ $member.pluginData.disableContainerSelectors | default "false" }}
        }
        {{ end }}
        {{ if eq $member.type "unix" }}
        plugin_data {
        }
        {{ end }}
      }
      {{ end }}

      KeyManager {{ .Values.spireAgent.config.plugins.keyManager.type | quote }} {
        plugin_data {
        }
      }
    }

    health_checks {
      listener_enabled = {{ .Values.spireAgent.config.healthChecks.listenerEnabled }}
      bind_address = {{ .Values.spireAgent.config.healthChecks.bindAddress | quote }}
      bind_port = {{ .Values.spireAgent.config.healthChecks.bindPort | quote }}
      live_path = {{ .Values.spireAgent.config.healthChecks.livePath | quote }}
      ready_path = {{ .Values.spireAgent.config.healthChecks.readyPath | quote }}
    }
